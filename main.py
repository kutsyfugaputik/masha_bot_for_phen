import sqlite3
import time

import telebot
from telebot import types

import markups as mark
import quests as qst
import specialists as spec
from config import token_api
from intro_text import intro_text

my_id = "786254617" # –í–∞—à –∞–π–¥–∏ –∫—É–¥–∞ –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —é–∑–µ—Ä–µ –∏ –µ–≥–æ –∑–∞—è–≤–∫–µ

def get_info_user(bot, message, admin):  # –§–£–ù–ö–¶–ò–Ø –û–ë –û–¢–ü–†–ê–í–ö–ò –°–û–û–ë–©–ï–ù–ò–Ø
          if admin:
              #–¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∂–∞–ª–æ–±—ã
              bot.send_message(my_id, '–ú–µ–Ω–µ–¥–∂–µ—Ä –≤–∞–º –ø–æ—Å–ª–∞–Ω–∏–µ –æ–± –∂–∞–ª–æ–±–µ!!üòÆ\n'+ message.text
                              + ' '
                              + f'{message.from_user.first_name}' + ' '
                              + f'{message.from_user.last_name}'+ ' username @'
                              f'{message.from_user.username}')
          else:
              #–¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–ø–µ—Ü–∞–ª–∏—Å—Ç—É
              bot.send_message(spec.ids[spec.act_id], spec.names[spec.act_id] +'! –í–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ:\n'+  message.text + ' '
                              + ' '
                              + f'{message.from_user.first_name}' + ' '
                              + f'{message.from_user.last_name}'+ ' username @'
                              f'{message.from_user.username}')


      #–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
def run_bot():
          id_spec=0
          bot = telebot.TeleBot(token_api)

          @bot.message_handler(commands=['start'])  # –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
          def send_welcome(message):
              conn = sqlite3.connect('users_manager_bot.db') #–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
              cur = conn.cursor()
              cur.execute("""CREATE TABLE IF NOT EXISTS users(
                  userid INT PRIMARY KEY,
                  fname TEXT,
                  lname TEXT);
              """)
              conn.commit() #–¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ —Ç–æ–º –∫—Ç–æ –≤–æ—à–µ–ª –≤ –±–æ—Ç–∞

              user_info = (f'{message.chat.id}',
                          f'{message.from_user.first_name}',
                          f'{message.from_user.last_name}'
                          f'{message.from_user.username}')

              cur.execute("INSERT OR IGNORE INTO users VALUES(?, ?, ?);", user_info)  
              conn.commit() #–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Ç–∞–±–ª–∏—Ü—É –∏–Ω—Ñ–∞ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ 

              img = open('title.jpg', 'rb')
              bot.send_photo(message.chat.id, img)#–æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏
              welcome_user = f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µüòä {message.from_user.first_name} {message.from_user.last_name}' + intro_text   
              bot.send_message(message.chat.id, welcome_user, reply_markup=mark.main_menu)

          @bot.message_handler(content_types=['text'])
          def send_markup(message):
              if message.text == '–ñ–∞–ª–æ–±–∞':
                  bot.send_message(message.chat.id, '–•–æ—Ä–æ—à–æüò•! –û–ø–∏—à–∏—Ç–µ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É'
                                                  ' –∏ –≤ –∫–æ–Ω—Ü–µ —Å–≤–æ–µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ—Å—Ç–∞–≤—å—Ç–µ —Å–∏–º–≤–æ–ª @ '
                                                  '\n—á—Ç–æ-–±—ã —è –ø–æ–Ω—è–ª–∞ –í–∞—Å. –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å–∞–º –≤–∞–º –Ω–∞–ø–∏—à–µ—Ç!', reply_markup=mark.del_markup)
              elif '@' in message.text:
                  bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ, —Å –í–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!üòâ',
                                   reply_markup=mark.any_func)
                  get_info_user(bot, message, True)

              elif message.text == 'C–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã':
                          bot.send_message(message.chat.id, '–•–æ—Ä–æ—à–æ! –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞!üôÇ',
                                           reply_markup=mark.specs)
                #–ø–æ–∫–∞–∑ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤

              elif message.text == '–°–≤–µ—Ç–ª–∞–Ω–∞':
                        spec.act_id=0
                        bot.send_message(message.chat.id, f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –°–≤–µ—Ç–ª–∞–Ω—É! –°—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã:{spec.staj[spec.act_id]} –≥–æ–¥–∞/–ª–µ—Ç. –ü—Ä–æ—Ñ–∏–ª—å: {spec.tag[spec.act_id]}. '
                                                            '–•–æ—Ç–∏—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è?',
                                           reply_markup=mark.call_specs)
              elif message.text == '–¢–∞—Ç—å—è–Ω–∞':
                        spec.act_id=1
                        bot.send_message(message.chat.id, f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –¢–∞—Ç—å—è–Ω—É! –°—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã:{spec.staj[spec.act_id]} –≥–æ–¥–∞/–ª–µ—Ç. –ü—Ä–æ—Ñ–∏–ª—å: {spec.tag[spec.act_id]}. '
                                           '–•–æ—Ç–∏—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è?',
                                         reply_markup=mark.call_specs)
              elif message.text == '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞':
                        spec.act_id=2
                        bot.send_message(message.chat.id, f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –ú–∞—Ä–≥–∞—Ä–∏—Ç—É! –°—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã:{spec.staj[spec.act_id]} –≥–æ–¥–∞/–ª–µ—Ç. –ü—Ä–æ—Ñ–∏–ª—å: {spec.tag[spec.act_id]}. '
              '–•–æ—Ç–∏—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è?',
                                           reply_markup=mark.call_specs)
              elif message.text == '–õ—É–∏–∑–∞':
                        spec.act_id=3
                        bot.send_message(message.chat.id, f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –õ—É–∏–∑—É! –°—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã:{spec.staj[spec.act_id]} –≥–æ–¥–∞/–ª–µ—Ç. –ü—Ä–æ—Ñ–∏–ª—å: {spec.tag[spec.act_id]}. '
                                           '–•–æ—Ç–∏—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è?',
                                           reply_markup=mark.call_specs)
              elif message.text == '–ö–∞—Ä–∏–Ω–∞':
                        spec.act_id=4
                        bot.send_message(message.chat.id, f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –ö–∞—Ä–∏–Ω—É! –°—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã:{spec.staj[spec.act_id]} –≥–æ–¥–∞/–ª–µ—Ç. –ü—Ä–æ—Ñ–∏–ª—å: {spec.tag[id_spec]}. '
                                           '–•–æ—Ç–∏—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è?',
                                     reply_markup=mark.call_specs)

              elif message.text == '–°–≤—è–∑–∞—Ç—å—Å—è':
                        bot.send_message(message.chat.id, '–•–æ—Ä–æ—à–æüòä! –ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ –¥–∏–∞–ª–æ–≥–∞ —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º'
                          ' –∏ –≤ –∫–æ–Ω—Ü–µ —Å–≤–æ–µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ—Å—Ç–∞–≤—å—Ç–µ —Å–∏–º–≤–æ–ª * '
                          '\n—á—Ç–æ-–±—ã —è –ø–æ–Ω—è–ª–∞ –í–∞—Å. –í–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å–∞–º –≤–∞–º –Ω–∞–ø–∏—à–µ—Ç!üòÅ', reply_markup=mark.del_markup)
              elif '*' in message.text:
                        bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ, —Å –í–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!üòâ',
                        reply_markup=mark.any_func)
                        get_info_user(bot, message, False)


              # –≤—ã–±–æ—Ä –≤–æ–ø—Ä–æ—Å–æ–≤ —Å –ø–æ–º–æ—â—å—é Inline-–∫–Ω–æ–ø–æ–∫
              elif message.text == '–í–æ–ø—Ä–æ—Å—ã':
                    if message.text == '–í–æ–ø—Ä–æ—Å—ã':
                      keyboard = types.InlineKeyboardMarkup()
                      for idx, question in enumerate(qst.questions, start=1):
                        callback_button = types.InlineKeyboardButton(text=qst.questions[idx-1], callback_data=f'question_{idx}')
                        keyboard.add(callback_button)
                      bot.send_message(message.chat.id, qst.text_quest, reply_markup=keyboard)

              elif message.text == '–û –∫–æ–º–ø–∞–Ω–∏–∏':
                    bot.send_message(message.chat.id, 'üå∑üå∏–°–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã "–ü–æ–¥ –§–µ–Ω–æ–º"üåºüåª - —ç—Ç–æ —É—é—Ç–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ –∫–∞–∂–¥–∞—è —Å—Ç—Ä–∏–∂–∫–∞ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ. –ù–∞—à–∏ –æ–ø—ã—Ç–Ω—ã–µ —Å—Ç–∏–ª–∏—Å—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç —Å –ª—é–±–æ–≤—å—é –∫ –¥–µ—Ç–∞–ª—è–º –∏ —Å—Ç—Ä–µ–º—è—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞. –ó–¥–µ—Å—å –≤—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –æ–±—Ä–µ—Ç–µ—Ç–µ –Ω–æ–≤—É—é –ø—Ä–∏—á–µ—Å–∫—É, –∞ –æ—Ç–∫—Ä–æ–µ—Ç–µ –¥–ª—è —Å–µ–±—è –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å —É—Ö–æ–¥–∞ –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏ –∏ —Å—Ç–∏–ª—è.\n  üòä–î–æ–≤–µ—Ä—å—Ç–µ—Å—å –Ω–∞–º, –∏ –≤—ã —É–π–¥–µ—Ç–µ –æ—Ç –Ω–∞—Å –Ω–µ —Ç–æ–ª—å–∫–æ —Å –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º, –Ω–æ –∏ —Å –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–º –æ–ø—ã—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Å—Ç–∞–≤–∏—Ç –≤–∞—Å –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∞–º —Å–Ω–æ–≤–∞ –∏ —Å–Ω–æ–≤–∞. \n üòâ–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫—É—é "–ü–æ–¥ –§–µ–Ω–æ–º" - –≥–¥–µ –≤–∞—à –æ–±—Ä–∞–∑ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –∏—Å–∫—É—Å—Å—Ç–≤–æ! \n –ë–∞–∫–ª–∞–Ω–æ–≤—Å–∫–∏–π 105–∞.—Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä –ü–æ–∏—Å–∫\nüë©‚Äçü¶∞–û–∫—Ä–∞—à–µ–≤–∞–Ω–∏—è –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏. \n–°—Ç—Ä–∏–∂–∫–∏ –∂–µ–Ω—Å–∫–∏–µ-–º—É–∂—Å–∫–∏–µüë®üë©\n–£–∫–ª–∞–¥–∫–∞ –≤–æ–ª–æ—Å.üë±‚Äç‚ôÄÔ∏è\n–£—Ö–æ–¥ –∏ –ª–µ—á–µ–Ω–∏–µ –≤–æ–ª–æ—Å.üë∏\n89281963013\n89281793282',
                     reply_markup=mark.any_func)
              elif message.text == '–ù–∞–∑–∞–¥':
                img = open('title.jpg', 'rb')
                bot.send_photo(message.chat.id, img)
                bot.send_message(message.chat.id, intro_text,
                               reply_markup=mark.main_menu)
              else:
                  bot.send_message(message.chat.id, '–Ø –í–∞—Å –Ω–µ –ø–æ–Ω—è–ª–∞ =(')

          # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Inline-–∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞
          @bot.callback_query_handler(func=lambda call: call.data.startswith('question_'))
          def handle_question_callback(call):
              question_index = int(call.data.split('_')[1]) - 1
              bot.send_message(call.message.chat.id, qst.questions[question_index],
                               reply_markup=mark.how_ques)
              bot.send_message(call.message.chat.id, qst.answers[question_index])

          while True:  # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—É–ª–∏–Ω–≥–∞
              print('–ú–∞—à–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞–ª–∞ –ø–∏—Ç—å —É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ—Ñ–µ ') # –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –±–æ—Ç–∞ –≤ –∫–º–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ 

              try:
                  bot.polling(none_stop=True, interval=3, timeout=20)
                  print('–≠—Ç–æ–≥–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å')
              except telebot.apihelper.ApiException:
                  print('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤—è–∑—å –∏ API')
                  time.sleep(10)
              except Exception as e:
                print(e)
                time.sleep(60)

if __name__ == '__main__':
        run_bot()